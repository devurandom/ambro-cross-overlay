diff -urN subversion-1.6.17/build/ac-macros/apr.m4 subversion-1.6.17.new/build/ac-macros/apr.m4
--- subversion-1.6.17/build/ac-macros/apr.m4	2012-11-10 16:52:37.386411522 +0000
+++ subversion-1.6.17.new/build/ac-macros/apr.m4	2012-11-10 17:28:09.607358090 +0000
@@ -1,7 +1,7 @@
 dnl
 dnl  SVN_LIB_APR(wanted_regex, alt_wanted_regex)
 dnl
-dnl  'wanted_regex' and 'alt_wanted_regex are regular expressions
+dnl  'wanted_regex' and 'alt_wanted_regex' are regular expressions
 dnl  that the apr version string must match.
 dnl
 dnl  Check configure options and assign variables related to
@@ -14,26 +14,25 @@
 
   AC_MSG_NOTICE([Apache Portable Runtime (APR) library configuration])
 
-  APR_FIND_APR("$abs_srcdir/apr", "$abs_builddir/apr", 1, [1 0])
+  apr_found="no"
+  if test -n "$PKG_CONFIG"; then
+    apr_pkg="apr-1"
+    AC_MSG_CHECKING([apr (via pkg-config)])
+    apr_version=`$PKG_CONFIG $apr_pkg --modversion --silence-errors`
+
+    if test -n "$apr_version"; then
+      AC_MSG_RESULT([$apr_version])
+      apr_found="yes"
+    fi
+  fi
 
   if test $apr_found = "no"; then
     AC_MSG_WARN([APR not found])
     SVN_DOWNLOAD_APR
   fi
 
-  if test $apr_found = "reconfig"; then
-    SVN_EXTERNAL_PROJECT([apr])
-  fi
-
   dnl check APR version number against regex  
 
-  AC_MSG_CHECKING([APR version])    
-  apr_version="`$apr_config --version`"
-  if test $? -ne 0; then
-    AC_MSG_ERROR([apr-config --version failed])
-  fi
-  AC_MSG_RESULT([$apr_version])
-
   APR_WANTED_REGEX_MATCH=0
   for apr_wanted_regex in $APR_WANTED_REGEXES; do
     if test `expr $apr_version : $apr_wanted_regex` -ne 0; then
@@ -49,46 +48,26 @@
 
   dnl Get build information from APR
 
-  CPPFLAGS="$CPPFLAGS `$apr_config --cppflags`"
-  if test $? -ne 0; then
-    AC_MSG_ERROR([apr-config --cppflags failed])
-  fi
-
-  CFLAGS="$CFLAGS `$apr_config --cflags`"
-  if test $? -ne 0; then
-    AC_MSG_ERROR([apr-config --cflags failed])
-  fi
-
-  LDFLAGS="$LDFLAGS `$apr_config --ldflags`"
-  if test $? -ne 0; then
-    AC_MSG_ERROR([apr-config --ldflags failed])
-  fi
-
-  SVN_APR_INCLUDES="`$apr_config --includes`"
-  if test $? -ne 0; then
-    AC_MSG_ERROR([apr-config --includes failed])
-  fi
-
-  SVN_APR_PREFIX="`$apr_config --prefix`"
+  SVN_APR_PREFIX=`$PKG_CONFIG $apr_pkg --variable=prefix --silence-errors`
   if test $? -ne 0; then
-    AC_MSG_ERROR([apr-config --prefix failed])
+    AC_MSG_ERROR([pkg-config --variable=prefix failed])
   fi
 
-  dnl When APR stores the dependent libs in the .la file, we don't need 
-  dnl --libs.
-  SVN_APR_LIBS="`$apr_config --link-libtool --libs`"
+  SVN_APR_INCLUDES=`$PKG_CONFIG $apr_pkg --cflags --silence-errors`
   if test $? -ne 0; then
-    AC_MSG_ERROR([apr-config --link-libtool --libs failed])
+    AC_MSG_ERROR([pkg-config --cflags failed])
   fi
+  CFLAGS="$CFLAGS $SVN_APR_INCLUDES"
 
-  SVN_APR_EXPORT_LIBS="`$apr_config --link-ld --libs`"
+  SVN_APR_LIBS=`$PKG_CONFIG $apr_pkg --libs --silence-errors`
   if test $? -ne 0; then
-    AC_MSG_ERROR([apr-config --link-ld --libs failed])
+    AC_MSG_ERROR([pkg-config --libs failed])
   fi
+  LDFLAGS="$LDFLAGS $SVN_APR_LIBS"
 
-  SVN_APR_SHLIB_PATH_VAR="`$apr_config --shlib-path-var`"
+  SVN_APR_SHLIB_PATH_VAR=`$PKG_CONFIG $apr_pkg --variable=shlib_path_var --silence-errors`
   if test $? -ne 0; then
-    AC_MSG_ERROR([apr-config --shlib-path-var failed])
+    AC_MSG_ERROR([pkg-config --variable=shlib_path_var failed])
   fi
 
   AC_SUBST(SVN_APR_PREFIX)
diff -urN subversion-1.6.17/build/ac-macros/aprutil.m4 subversion-1.6.17.new/build/ac-macros/aprutil.m4
--- subversion-1.6.17/build/ac-macros/aprutil.m4	2012-11-10 16:52:37.386411522 +0000
+++ subversion-1.6.17.new/build/ac-macros/aprutil.m4	2012-11-10 17:42:39.320336294 +0000
@@ -1,6 +1,6 @@
 dnl  SVN_LIB_APRUTIL(wanted_regex, alt_wanted_regex)
 dnl
-dnl  'wanted_regex' and 'alt_wanted_regex are regular expressions 
+dnl  'wanted_regex' and 'alt_wanted_regex' are regular expressions 
 dnl  that the aprutil version string must match.
 dnl
 dnl  Check configure options and assign variables related to
@@ -19,34 +19,25 @@
 
   AC_MSG_NOTICE([Apache Portable Runtime Utility (APRUTIL) library configuration])
 
-  APR_FIND_APU("$abs_srcdir/apr-util", "$abs_builddir/apr-util", 1, [1 0])
+  apu_found="no"
+  if test -n "$PKG_CONFIG"; then
+    apu_pkg="apr-util-1"
+    AC_MSG_CHECKING([apr-util (via pkg-config)])
+    apu_version=`$PKG_CONFIG $apu_pkg --modversion --silence-errors`
+
+    if test -n "$apu_version"; then
+      AC_MSG_RESULT([$apu_version])
+      apu_found="yes"
+    fi
+  fi
 
   if test $apu_found = "no"; then
     AC_MSG_WARN([APRUTIL not found])
     SVN_DOWNLOAD_APRUTIL
   fi
 
-  if test $apu_found = "reconfig"; then
-    SVN_EXTERNAL_PROJECT([apr-util], [--with-apr=../apr])
-  fi
-
   dnl check APRUTIL version number against regex  
 
-  AC_MSG_CHECKING([APR-UTIL version])    
-  apu_version="`$apu_config --version`"
-  if test $? -ne 0; then
-    # This is a hack as suggested by Ben Collins-Sussman.  It can be
-    # removed after apache 2.0.44 has been released.  (The apu-config
-    # shipped in 2.0.43 contains a correct version number, but
-    # stupidly doesn't understand the --version switch.)
-    apu_version=`grep "APRUTIL_DOTTED_VERSION=" $(which $apu_config) | tr -d "APRUTIL_DOTTED_VERSION="| tr -d '"'`
-    #AC_MSG_ERROR([
-    #    apu-config --version failed.
-    #    Your apu-config doesn't support the --version switch, please upgrade
-    #    to APR-UTIL more recent than 2002-Nov-05.])
-  fi
-  AC_MSG_RESULT([$apu_version])
-
   APU_WANTED_REGEX_MATCH=0
   for apu_wanted_regex in $APRUTIL_WANTED_REGEXES; do
     if test `expr $apu_version : $apu_wanted_regex` -ne 0; then
@@ -62,31 +53,21 @@
 
   dnl Get libraries and thread flags from APRUTIL ---------------------
 
-  LDFLAGS="$LDFLAGS `$apu_config --ldflags`"
+  SVN_APRUTIL_INCLUDES=`$PKG_CONFIG $apu_pkg --cflags --silence-errors`
   if test $? -ne 0; then
-    AC_MSG_ERROR([apu-config --ldflags failed])
+    AC_MSG_ERROR([pkg-config --cflags failed])
   fi
+  CFLAGS="$CFLAGS $SVN_APR_INCLUDES"
 
-  SVN_APRUTIL_INCLUDES="`$apu_config --includes`"
+  SVN_APRUTIL_LIBS=`$PKG_CONFIG $apu_pkg --libs --silence-errors`
   if test $? -ne 0; then
-    AC_MSG_ERROR([apu-config --includes failed])
+    AC_MSG_ERROR([pkg-config --libs failed])
   fi
+  LDFLAGS="$LDFLAGS $SVN_APR_LIBS"
 
-  SVN_APRUTIL_PREFIX="`$apu_config --prefix`"
+  SVN_APRUTIL_PREFIX=`$PKG_CONFIG $apu_pkg --variable=prefix --silence-errors`
   if test $? -ne 0; then
-    AC_MSG_ERROR([apu-config --prefix failed])
-  fi
-
-  dnl When APR stores the dependent libs in the .la file, we don't need
-  dnl --libs.
-  SVN_APRUTIL_LIBS="`$apu_config --link-libtool --libs`"
-  if test $? -ne 0; then
-    AC_MSG_ERROR([apu-config --link-libtool --libs failed])
-  fi
-
-  SVN_APRUTIL_EXPORT_LIBS="`$apu_config --link-ld --libs`"
-  if test $? -ne 0; then
-    AC_MSG_ERROR([apu-config --link-ld --libs failed])
+    AC_MSG_ERROR([pkg-config --variable=prefix failed])
   fi
 
   AC_SUBST(SVN_APRUTIL_INCLUDES)
@@ -94,11 +75,6 @@
   AC_SUBST(SVN_APRUTIL_EXPORT_LIBS)
   AC_SUBST(SVN_APRUTIL_PREFIX)
 
-  dnl What version of Expat are we using? -----------------
-  SVN_HAVE_OLD_EXPAT="`$apu_config --old-expat`"
-  if test "$SVN_HAVE_OLD_EXPAT" = "yes"; then
-    AC_DEFINE(SVN_HAVE_OLD_EXPAT, 1, [Defined if Expat 1.0 or 1.1 was found])
-  fi
 ])
 
 dnl SVN_DOWNLOAD_APRUTIL()
diff -urN subversion-1.6.17/build/ac-macros/berkeley-db.m4 subversion-1.6.17.new/build/ac-macros/berkeley-db.m4
--- subversion-1.6.17/build/ac-macros/berkeley-db.m4	2012-11-10 16:52:37.386411522 +0000
+++ subversion-1.6.17.new/build/ac-macros/berkeley-db.m4	2012-11-10 18:14:18.201288711 +0000
@@ -38,7 +38,7 @@
     if test "$withval" = "no"; then
       status=skip
     elif test "$withval" = "yes"; then
-      apu_db_version="`$apu_config --db-version`"
+      apu_db_version="`$PKG_CONFIG $apu_pkg --variable=db_version --silence-errors`"
       if test $? -ne 0; then
         AC_MSG_ERROR([Can't determine whether apr-util is linked against a
                       proper version of Berkeley DB.])
@@ -90,7 +90,7 @@
     # Check if APR-UTIL is providing the correct Berkeley DB version
     # for us.
     #
-    apu_db_version="`$apu_config --db-version`"
+    apu_db_version="`$PKG_CONFIG $apu_pkg --variable=db_version --silence-errors`"
     if test $? -ne 0; then
       AC_MSG_WARN([Detected older version of APR-UTIL, trying to determine
                    whether apr-util is linked against Berkeley DB
@@ -161,10 +161,10 @@
     # Or that it resides in a non-standard location which we would have
     # to compensate with using something like -R`$apu_config --prefix`/lib.
     #
-    SVN_DB_LIBS=["${SVN_DB_LIBS-`$apu_config --libs | $SED -e 's/.*\(-ldb[^[:space:]]*\).*/\1/' | $EGREP -- '-ldb[^[:space:]]*'`}"]
+    SVN_DB_LIBS=["${SVN_DB_LIBS-`$PKG_CONFIG $apu_pkg --libs --silence-errors | $SED -e 's/.*\(-ldb[^[:space:]]*\).*/\1/' | $EGREP -- '-ldb[^[:space:]]*'`}"]
 
     CPPFLAGS="$SVN_DB_INCLUDES $SVN_APRUTIL_INCLUDES $CPPFLAGS" 
-    LIBS="`$apu_config --ldflags` $SVN_DB_LIBS $LIBS"
+    LIBS="`$PKG_CONFIG $apu_pkg --libs --silence-errors` $LIBS"
 
     if test -n "$svn_berkeley_db_header"; then
       SVN_DB_HEADER="#include <$svn_berkeley_db_header>"
diff -urN subversion-1.6.17/build/ac-macros/zlib.m4 subversion-1.6.17.new/build/ac-macros/zlib.m4
--- subversion-1.6.17/build/ac-macros/zlib.m4	2012-11-10 16:52:37.386411522 +0000
+++ subversion-1.6.17.new/build/ac-macros/zlib.m4	2012-11-10 16:57:59.745403444 +0000
@@ -24,25 +24,37 @@
         LDFLAGS="-L$zlib_prefix/lib"
         AC_CHECK_LIB(z, inflate, [zlib_found="yes"])
         LDFLAGS="$save_ldflags"
+        if test "$zlib_found" = "yes"; then
+          SVN_ZLIB_PREFIX="$zlib_prefix"
+          SVN_ZLIB_INCLUDES="-I$zlib_prefix/include"
+          LDFLAGS="$LDFLAGS -L$zlib_prefix/lib"
+        fi
       ])
       CPPFLAGS="$save_cppflags"
     fi
   ],
   [
-    AC_CHECK_HEADER(zlib.h, [
-      AC_CHECK_LIB(z, inflate, [zlib_found="builtin"])
-    ])
+    dnl search by pkg-config
+    if test -n "$PKG_CONFIG"; then
+      AC_MSG_CHECKING([zlib (via pkg-config)])
+      zlib_version=`$PKG_CONFIG zlib --modversion --silence-errors`
+
+      if test -n "$zlib_version"; then
+        AC_MSG_RESULT([$zlib_version])
+	zlib_found=yes
+	SVN_ZLIB_INCLUDES=`$PKG_CONFIG zlib --cflags --silence-errors`
+	SVN_ZLIB_LIBS=`$PKG_CONFIG zlib --libs --silence-errors`
+	LDFLAGS="$LDFLAGS $SVN_ZLIB_LIBS"
+      else
+	AC_MSG_RESULT([none])
+      fi
+    fi
   ])
 
   if test "$zlib_found" = "no"; then
     AC_MSG_ERROR([subversion requires zlib])
   fi
 
-  if test "$zlib_found" = "yes"; then
-    SVN_ZLIB_PREFIX="$zlib_prefix"
-    SVN_ZLIB_INCLUDES="-I$zlib_prefix/include"
-    LDFLAGS="$LDFLAGS -L$zlib_prefix/lib"
-  fi
 
   SVN_ZLIB_LIBS="-lz"
 
diff -urN subversion-1.6.17/configure.ac subversion-1.6.17.new/configure.ac
--- subversion-1.6.17/configure.ac	2012-11-10 16:52:37.384411522 +0000
+++ subversion-1.6.17.new/configure.ac	2012-11-10 16:57:59.746403443 +0000
@@ -72,15 +72,15 @@
 dnl   them.  Only .7 and later can guarantee repository
 dnl   integrity with FSFS.
 
+dnl Search for pkg-config
+AC_PATH_TOOL(PKG_CONFIG, pkg-config)
+
 APR_VER_REGEXES=["0\.9\.[7-9] 0\.9\.1[0-9] 1\."]
 APU_VER_REGEXES=["0\.9\.[7-9] 0\.9\.1[0-9] 1\."]
 
 SVN_LIB_APR($APR_VER_REGEXES)
 SVN_LIB_APRUTIL($APU_VER_REGEXES)
 
-dnl Search for pkg-config
-AC_PATH_PROG(PKG_CONFIG, pkg-config)
-
 # Either a space-separated list of allowable Neon versions, or "any" to
 # mean allow anything.
 NEON_ALLOWED_LIST="0\.25 0\.26 0\.27\.2 0\.28 0\.29"
